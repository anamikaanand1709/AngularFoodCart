{"ast":null,"code":"// import { Component } from '@angular/core';\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'FoodCart';\n// }\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_0_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeItem(item_r1));\n    });\n    i0.ɵɵtext(3, \"Remove\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", item_r1.name, \" - \", item_r1.price, \" \");\n  }\n}\nexport class AppComponent {\n  constructor() {\n    //@Input() items = [];\n    this.items = [];\n    this.itemRemoved = new EventEmitter();\n    this.itemAdded = new EventEmitter();\n    this.newItemName = '';\n    this.newItemPrice = \"\";\n  }\n  addItem() {\n    this.itemAdded.emit({\n      name: this.newItemName,\n      price: this.newItemPrice\n    });\n    this.newItemName = '';\n    this.newItemPrice = 0;\n  }\n  removeItem(item) {\n    this.itemRemoved.emit(item);\n  }\n  getTotal() {\n    return this.items.reduce((total, item) => total + item.price, 0);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-cart\"]],\n  outputs: {\n    itemRemoved: \"itemRemoved\",\n    itemAdded: \"itemAdded\"\n  },\n  decls: 7,\n  vars: 4,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Item name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"Item price\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AppComponent_div_0_Template, 4, 2, \"div\", 0);\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.newItemName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.newItemPrice = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_3_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(4, \"Add item\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItemName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.newItemPrice);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Total: \", ctx.getTotal(), \"\");\n    }\n  },\n  dependencies: [i1.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAmCA,YAAY,QAAQ,eAAe;;;;;;IAOlEC,2BAAgC;IAC9BA,YACA;IAAAA,iCAAmC;IAA3BA;MAAA;MAAA;MAAA;MAAA,OAASA,yCAAgB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;IADlDA,eACA;IADAA,mEACA;;;AAUN,OAAM,MAAOC,YAAY;EAfzBC;IAgBE;IACA,UAAK,GAAW,EAAE;IACR,gBAAW,GAAG,IAAIH,YAAY,EAAE;IAChC,cAAS,GAAG,IAAIA,YAAY,EAAE;IAIxC,gBAAW,GAAG,EAAE;IAChB,iBAAY,GAAG,EAAE;;EAGjBI,OAAO;IACL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC;MAAEC,IAAI,EAAE,IAAI,CAACC,WAAW;MAAEC,KAAK,EAAE,IAAI,CAACC;IAAY,CAAE,CAAC;IACzE,IAAI,CAACF,WAAW,GAAG,EAAE;IACrB,IAAI,CAACE,YAAY,GAAG,CAAC;EACvB;EAEAC,UAAU,CAACC,IAAS;IAClB,IAAI,CAACC,WAAW,CAACP,IAAI,CAACM,IAAI,CAAC;EAC7B;EAECE,QAAQ;IACN,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGL,IAAI,CAACH,KAAK,EAAE,CAAC,CAAC;EACnE;;AAxBWP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAgB;EAAAC;IAAAN;IAAAR;EAAA;EAAAe;EAAAC;EAAAC;EAAAC;IAAA;MAZrBtB,6DAGM;MACNA,gCAAqE;MAAlDA;QAAA;MAAA,EAAyB;MAA5CA,iBAAqE;MACrEA,gCAAyE;MAApDA;QAAA;MAAA,EAA0B;MAA/CA,iBAAyE;MACzEA,iCAA4B;MAApBA;QAAA,OAASuB,aAAS;MAAA,EAAC;MAACvB,wBAAQ;MAAAA,iBAAS;MAC7CA,yBAAG;MAAAA,YAAuB;MAAAA,iBAAI;;;MAPRA,mCAAQ;MAIXA,eAAyB;MAAzBA,yCAAyB;MACvBA,eAA0B;MAA1BA,0CAA0B;MAE5CA,eAAuB;MAAvBA,oDAAuB","names":["EventEmitter","i0","AppComponent","constructor","addItem","itemAdded","emit","name","newItemName","price","newItemPrice","removeItem","item","itemRemoved","getTotal","items","reduce","total","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\Desktop\\trainingAngular\\FoodCart\\src\\app\\app.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'FoodCart';\n// }\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\ntype Item = { name: string; price: number };\n\n@Component({\n  selector: 'app-cart',\n  template: `\n    <div *ngFor=\"let item of items\">\n      {{ item.name }} - {{ item.price }}\n      <button (click)=\"removeItem(item)\">Remove</button>\n    </div>\n    <input type=\"text\" [(ngModel)]=\"newItemName\" placeholder=\"Item name\">\n    <input type=\"number\" [(ngModel)]=\"newItemPrice\" placeholder=\"Item price\">\n    <button (click)=\"addItem()\">Add item</button>\n    <p>Total: {{ getTotal() }}</p>\n  `\n})\n\n\nexport class AppComponent {\n  //@Input() items = [];\n  items: Item[] = [];\n  @Output() itemRemoved = new EventEmitter();\n  @Output() itemAdded = new EventEmitter();\n\n  \n\n  newItemName = '';\n  newItemPrice = \"\";\n  title: any;\n\n  addItem() {\n    this.itemAdded.emit({ name: this.newItemName, price: this.newItemPrice });\n    this.newItemName = '';\n    this.newItemPrice = 0;\n  }\n\n  removeItem(item: any) {\n    this.itemRemoved.emit(item);\n  }\n\n   getTotal() {\n     return this.items.reduce((total, item) => total + item.price, 0);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}